name: Version Management

on:
  push:
    branches:
      - main

jobs:
  version:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Determine version bump
        id: version
        run: |
          # Get the latest version tag
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $latest_tag"

          # Get all commits since the last tag
          commits=$(git log $latest_tag..HEAD --format="%s")
          echo "Commits since last tag:"
          echo "$commits"

          # Determine version bump based on conventional commits
          if echo "$commits" | grep -q "^feat[:(]"; then
            echo "bump=minor" >> $GITHUB_OUTPUT
          elif echo "$commits" | grep -q "^fix[:(]" || echo "$commits" | grep -q "^perf[:(]"; then
            echo "bump=patch" >> $GITHUB_OUTPUT
          else
            echo "bump=none" >> $GITHUB_OUTPUT
          fi

      - name: Bump version
        if: steps.version.outputs.bump != 'none'
        run: |
          # Bump version without git tag
          npm version ${{ steps.version.outputs.bump }} --no-git-tag-version

          # Get the new version
          NEW_VERSION=$(node -p "require('./package.json').version")

          # Commit the version bump
          git add package.json
          git add package-lock.json
          git commit -m "chore(release): ${NEW_VERSION} [skip ci]"

          # Create and push tag
          git tag -a "v${NEW_VERSION}" -m "Release v${NEW_VERSION}"
          git push origin main --follow-tags

      - name: Publish to npm
        if: steps.version.outputs.bump != 'none'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
